################################################################################
# Static Kernel Analysis (SKA) project
################################################################################

#------------------------------------------------------------------------------#
# Initialize autoconf
#------------------------------------------------------------------------------#

AC_INIT(ska, VERSION_TAG, bergen@lanl.gov)
AC_CONFIG_AUX_DIR(config)

VERSION_INFORMATION="VERSION_TAG"
AC_SUBST(VERSION_INFORMATION)

#------------------------------------------------------------------------------#
# Initialize automake
#------------------------------------------------------------------------------#

AM_INIT_AUTOMAKE

#------------------------------------------------------------------------------#
# Machine file specification
#------------------------------------------------------------------------------#

CONFIG_WITH_MACHINE("$srcdir/machine")

#------------------------------------------------------------------------------#
# Configuration targets
#------------------------------------------------------------------------------#

AC_CONFIG_FILES([Makefile \
	lib/Makefile \
	bin/Makefile
])

#------------------------------------------------------------------------------#
# Program options
#------------------------------------------------------------------------------#

AC_PROG_CXX
AC_PROG_LIBTOOL
CONFIG_PROG_LLVM_CONFIG

#------------------------------------------------------------------------------#
# With options
#------------------------------------------------------------------------------#

#CONFIG_GENERIC_WITH(ocl_devices, OCL_DEVICES, [default])

#------------------------------------------------------------------------------#
# Enable options
#------------------------------------------------------------------------------#

#CONFIG_GENERIC_ENABLE(opencl_profiling, OPENCL_PROFILING)

#------------------------------------------------------------------------------#
# LLVM
#------------------------------------------------------------------------------#

if test "$HAS_LLVM_CONFIG" = "yes" ; then
	LLVM_DEPENDS=`llvm-config --libs`" -lpthread -ldl"
fi

CPPFLAGS="$CPPFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"

CONFIG_GENERIC_LIB(llvm, LLVM, [llvm::Pass::createPass((llvm::AnalysisID) 0)],
	C++, [$LLVM_DEPENDS])

EXTRA_CPPFLAGS="$EXTRA_CPPFLAGS $LLVM_CPPFLAGS"
EXTRA_LDFLAGS="$EXTRA_LDFLAGS $LLVM_LDFLAGS"
EXTRA_LIBS="$EXTRA_LIBS $LLVM_LIBS"

#------------------------------------------------------------------------------#
# Xerces
#------------------------------------------------------------------------------#

CONFIG_GENERIC_LIB(xerces-c, XERCES,
   [XERCES_CPP_NAMESPACE::XMLString::isAlpha((XMLCh const) 0)], C++)

EXTRA_CPPFLAGS="$EXTRA_CPPFLAGS $XERCES_CPPFLAGS"
EXTRA_LDFLAGS="$EXTRA_LDFLAGS $XERCES_LDFLAGS"
EXTRA_LIBS="$EXTRA_LIBS $XERCES_LIBS"

#------------------------------------------------------------------------------#
# Set extras
#------------------------------------------------------------------------------#

AC_SUBST(EXTRA_CPPFLAGS)
AC_SUBST(EXTRA_LDFLAGS)
AC_SUBST(EXTRA_LIBS)

#------------------------------------------------------------------------------#
# Handle Doxygen
#------------------------------------------------------------------------------#

#if test "$HAS_DOXYGEN" = "yes" ; then
#	AC_SUBST(DOC, [doc])
#	AC_CONFIG_COMMANDS([doc], [make doc])
#fi

AC_CONFIG_COMMANDS([links], [make links])

#------------------------------------------------------------------------------#
# Output
#------------------------------------------------------------------------------#

AC_OUTPUT
