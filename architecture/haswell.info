Mapping of LLVM IR to Haswell :-

latency::ret --> RET
br --> JMP
sw --> JMP
indirectbr --> JMP
invoke --> CALL
resume --> RET
unreachable --> no mapping, what is this ?

add --> ADD  , for integers
        FADD , for floating point and double
        PADD , for vector integer
        ADDSS, for vector floating point 

sub --> SUB, for integeres
        FSUB, for floating point and double
        PSUB, for vector integers
        SUBSS, for vector floats 

mul --> IMUL, for integers
        FMUL, for floating point and double     
        PMUL, for vector integer
        MULSS, for vector floats

udiv --> DIV r64
sdiv --> IDIV r64

fdiv -->   FDIV  for float and double 
           DIVSS for vector xmm

urem --> FPREM
srem --> FPREM
frem --> FPREM // this is not accurate as x64 does not have
               //rem instructions for urem, srem and vector
               //FPREM is x87

shl --> SHR SHL SAR
lshl --> SHR SHL SAR
ashr -- >SHR SHL SAR

and or xor --> AND OR XOR

alloca --> //does not seem to be any instruction

load, store --> MOV r,m MOV m,r

getelementptr --> MOV m,r

fence --> //does not seem to be any instruction 

atomiccmprxchg --> CMPXCHG

atomicrmw --> CMPXCHG

//atomically modify the memory

trunc --> 

zext -->

sext -->

fptoui -->

fptosi -->

uitofp -->

sitofp -->

fptrunc -->

fpext -->

ptrtoint -->

inttoptr -->

bitcast --> 

icmp -->

fcmp -->

phi -->

call -->

select -->

userop1 -->

userop2 -->

vaarg -->

extractelement --> 

insertelement -->

shufflevector -->

extractvalue -->

insertvalue -->

landingpad -->

malloc -->

free -->

fabs -->

sqrt -->

rsqrt  --> 

hadd --> //which llvm instruction is this ? 

log -->FYL2X //does not contain any vector instruction in x86
             //this is x87 floating point instruction

pow --> FYL2X + F2XM1
